name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses (resilient)
        shell: bash
        run: |
          # Evita falha por Broken pipe em ambientes do GitHub Actions
          yes | sdkmanager --licenses || true

      - name: Install Android SDK packages
        shell: bash
        run: |
          set -e
          # Instala ferramentas e plataformas necessÃ¡rias ao build
          sdkmanager "platform-tools" "platforms;android-36" "build-tools;35.0.0" || true
          # Caso a API 36 esteja apenas em canais preview, tenta o canal canary
          sdkmanager --channel=3 "platforms;android-36" || true

      - name: Make Gradle wrapper executable
        run: chmod +x gradlew

      - name: Build Release APK
        run: ./gradlew --no-daemon assembleRelease

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: warn

name: Android CI

on:
  push:
    paths:
      - '.github/workflows/android.yml'
      - 'app/**'
      - 'gradle/**'
      - 'build.gradle'
      - 'gradle.properties'
      - 'gradlew'
      - 'gradlew.bat'
      - 'public-stable-ids.txt'
      - 'settings.gradle'
    branches-ignore:
      - 'wip/**'
  workflow_dispatch:

jobs:
  notifyTelegram:
    name: Notify Telegram
    runs-on: ${{ vars.IS_USING_HOSTED_RUNNERS == 'true' && 'self-hosted' || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          pip install requests

      - name: Send a message to Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_TOPIC_ID: ${{ secrets.TELEGRAM_TOPIC_ID }}
        run: |
          python ./.github/workflows/notify_telegram.py
        continue-on-error: true

  build:
    name: Build APKs
    runs-on: ${{ vars.IS_USING_HOSTED_RUNNERS == 'true' && 'self-hosted' || 'ubuntu-latest' }}
    outputs:
      short_sha: ${{ steps.set_sha.outputs.short_sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept SDK licenses and install packages
        shell: bash
        run: |
          yes | sdkmanager --licenses > /dev/null
          sdkmanager \
            "platform-tools" \
            "build-tools;35.0.0" \
            "platforms;android-36"

      - name: Set environmental variables
        shell: bash
        env:
          JSON_CONTENT: ${{ secrets.GOOGLE_SERVICES_JSON }}
        if: ${{ env.JSON_CONTENT != '' }}
        run: |
          printf 'GOOGLE_SERVICES_JSON<<EOF\n%s\nEOF\n' "$JSON_CONTENT" >> $GITHUB_ENV

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-disabled: true

      - name: Build Release APK
        env:
          SKETCHUB_API_KEY: ${{ secrets.SKETCHUB_API_KEY }}
        run: |
          chmod +x ./gradlew
          ./gradlew --version
          ./gradlew assembleRelease --no-daemon

      - name: Set short SHA
        id: set_sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Rename APK with commit hash
        run: |
          mv app/build/outputs/apk/release/app-release.apk \
             app/build/outputs/apk/release/app-release-${{ steps.set_sha.outputs.short_sha }}.apk

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-release-${{ steps.set_sha.outputs.short_sha }}
          path: app/build/outputs/apk/release/app-release-${{ steps.set_sha.outputs.short_sha }}.apk



  updateAppData:
    name: Update App Data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          pip install requests

      - name: Run Update App Script
        run: python .github/workflows/update_app_data.py

      - name: Commit and Push Changes
        env:
          GH_ABOUT_APP_WORKFLOW_TOKEN: ${{ secrets.GH_ABOUT_APP_WORKFLOW_TOKEN }}
        run: |
          git checkout host
          git config --global user.name "Sketchware Pro Actions"
          git config --global user.email "hello@sketchware.pro"
          git add about.json
          git commit -m "feat: Update app about screen data"
          git push
        continue-on-error: true
      
